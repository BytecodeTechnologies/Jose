//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Excel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class NJTicketEntities : DbContext
    {
        public NJTicketEntities()
            : base("name=NJTicketEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<NJ_Details> NJ_Details { get; set; }
        public DbSet<NJ_User> NJ_User { get; set; }
        public DbSet<NJ_UserRole> NJ_UserRole { get; set; }
        public DbSet<NJ_tblComment> NJ_tblComment { get; set; }
        public DbSet<NJ_Clients> NJ_Clients { get; set; }
        public DbSet<tbl_CertificateFiles> tbl_CertificateFiles { get; set; }
        public DbSet<tbl_APISearchHistory> tbl_APISearchHistory { get; set; }
        public DbSet<NJ_CallLog> NJ_CallLog { get; set; }
    
        public virtual int nfs_GetPresets(Nullable<int> domainID, Nullable<bool> vendor, Nullable<int> presetType, Nullable<int> loginID, Nullable<int> siteID, Nullable<int> typeID)
        {
            var domainIDParameter = domainID.HasValue ?
                new ObjectParameter("DomainID", domainID) :
                new ObjectParameter("DomainID", typeof(int));
    
            var vendorParameter = vendor.HasValue ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(bool));
    
            var presetTypeParameter = presetType.HasValue ?
                new ObjectParameter("PresetType", presetType) :
                new ObjectParameter("PresetType", typeof(int));
    
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            var siteIDParameter = siteID.HasValue ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("nfs_GetPresets", domainIDParameter, vendorParameter, presetTypeParameter, loginIDParameter, siteIDParameter, typeIDParameter);
        }
    
        public virtual ObjectResult<ImportJobMaterialsModify_Result> ImportJobMaterialsModify(string jobMaterialsXml, string tableid)
        {
            var jobMaterialsXmlParameter = jobMaterialsXml != null ?
                new ObjectParameter("JobMaterialsXml", jobMaterialsXml) :
                new ObjectParameter("JobMaterialsXml", typeof(string));
    
            var tableidParameter = tableid != null ?
                new ObjectParameter("Tableid", tableid) :
                new ObjectParameter("Tableid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ImportJobMaterialsModify_Result>("ImportJobMaterialsModify", jobMaterialsXmlParameter, tableidParameter);
        }
    
        public virtual int Materials(string jobMaterialsXml, string tableid)
        {
            var jobMaterialsXmlParameter = jobMaterialsXml != null ?
                new ObjectParameter("JobMaterialsXml", jobMaterialsXml) :
                new ObjectParameter("JobMaterialsXml", typeof(string));
    
            var tableidParameter = tableid != null ?
                new ObjectParameter("Tableid", tableid) :
                new ObjectParameter("Tableid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Materials", jobMaterialsXmlParameter, tableidParameter);
        }
    
        public virtual int Materials_new(string jobMaterialsXml, string tableid)
        {
            var jobMaterialsXmlParameter = jobMaterialsXml != null ?
                new ObjectParameter("JobMaterialsXml", jobMaterialsXml) :
                new ObjectParameter("JobMaterialsXml", typeof(string));
    
            var tableidParameter = tableid != null ?
                new ObjectParameter("Tableid", tableid) :
                new ObjectParameter("Tableid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Materials_new", jobMaterialsXmlParameter, tableidParameter);
        }
    }
}
